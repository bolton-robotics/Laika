<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >

<!-- Colours for Gazebo links -->

    <gazebo reference="chassis_link">
        <material>Gazebo/Blue</material>
    </gazebo>
    <gazebo reference="right_front_wheel">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="left_front_wheel">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="right_back_wheel">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="left_back_wheel">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="laser_frame">
        <material>Gazebo/Red</material>
    </gazebo>
    <gazebo reference="camera_base_link">
        <material>Gazebo/Black</material>
    </gazebo>
    <gazebo reference="camera_link">
        <material>Gazebo/White</material>
    </gazebo>

<!-- Camera Configuration -->

    <gazebo reference="camera_link">
        <sensor name="camera" type="camera">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <camera>
                <horizontal_fov>1.089</horizontal_fov>
                <image>
                    <format>R8G8B8</format>
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <frame_name>camera_link_optical</frame_name>
            </plugin>
        </sensor>
    </gazebo>

<!-- Lidar Configuration -->

    <gazebo reference="laser_frame">
        <material>Gazebo/Red</material>
        <sensor name="laser" type="ray">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>false</visualize>
            <update_rate>10</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>360</samples>
                        <min_angle>-3.14</min_angle>
                        <max_angle>3.14</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.3</min>
                    <max>12</max>
                </range>
            </ray>
            <plugin name="laser_controller" filename="libgazebo_ros_ray_sensor.so">
                <ros>
                    <argument>~/out:=scan</argument>
                </ros>
                <output_type>sensor_msgs/LaserScan</output_type>
                <frame_name>laser_frame</frame_name>
            </plugin>
        </sensor>
    </gazebo>

<!-- IMU Configuration -->

    <gazebo reference="imu_link">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <topic>__default_topic__</topic>
        <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
          <topicName>imu</topicName>
          <bodyName>imu_link</bodyName>
          <updateRateHZ>10.0</updateRateHZ>
          <gaussianNoise>0.0</gaussianNoise>
          <xyzOffset>0 0 0</xyzOffset>
          <rpyOffset>0 0 0</rpyOffset>
          <frameName>imu_link</frameName>
          <initialOrientationAsReference>false</initialOrientationAsReference>
        </plugin>
        <pose>0 0 0 0 0 0</pose>
      </sensor>
    </gazebo>

<!--ROS2_control Controller -->

    <!--Note that libgazebo_ros_skid_steer_drive.so has been replace in ROS2
        with libgazebo_ros_diff_drive.so -->

    <ros2_control name="GazeboSystem" type="system">
            <hardware>
                <plugin>gazebo_ros2_control/GazeboSystem</plugin>
            </hardware>
            <joint name="left_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="velocity"/>
                <state_interface name="position"/>
            </joint>
            <joint name="right_wheel_joint">
                <command_interface name="velocity">
                    <param name="min">-10</param>
                    <param name="max">10</param>
                </command_interface>
                <state_interface name="velocity"/>
                <state_interface name="position"/>
            </joint>
        </ros2_control>

    <gazebo>
        <plugin name="gazebo_ros2_control" filename="libgazebo_ros2_control.so">
            <parameters>$(find laika_description)/config/my_controllers.yaml</parameters>
            <parameters>$(find laika_description)/config/gaz_ros2_ctl_use_sim.yaml</parameters>
        </plugin>
    </gazebo>

<!-- Joint State Publisher and Pose -->
    <gazebo>
      <plugin name="gazebo_ros_joint_state_publisher"
          filename="libgazebo_ros_joint_state_publisher.so">
        <update_rate>20</update_rate>
        <joint_name>base_to_right_front_wheel</joint_name>
        <joint_name>base_to_left_front_wheel</joint_name>
        <joint_name>base_to_right_back_wheel</joint_name>
        <joint_name>base_to_left_back_wheel</joint_name>
      </plugin>
    </gazebo>

    <!--Note:  In startup the following error will occur:    
    "[rviz2-5] Warning: Invalid frame ID "left_back_wheel" passed to canTransform argument source_frame - frame does not exist"
    This will disappear when the Gazebo Joint State Publisher is running.
     -->

</robot>